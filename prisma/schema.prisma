// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// User
model User {
  id          Int     @id @default(autoincrement())
  username    String  @unique
  phoneNumber String?
  password    String
}

enum Grade {
  GARDEN_3
  GARDEN_4
  GARDEN_5
  GRADE_PRIMARY_1
  GRADE_PRIMARY_2
  GRADE_PRIMARY_3
  GRADE_PRIMARY_4
  GRADE_PRIMARY_5
  GRADE_PRIMARY_6
  GRADE_SECONDARY_1
  GRADE_SECONDARY_2
  GRADE_SECONDARY_3
  GRADE_SECONDARY_4
  GRADE_SECONDARY_5
  GRADE_PRE_1
  GRADE_PRE_2
  GRADE_PRE_3
  GRADE_PRE_4
}

enum Section {
  A
  B
  C
  D
  E
}

model Alumno {
  id       Int       @id @default(autoincrement())
  dni      String?   @unique
  fullName String
  grade    Grade
  section  Section
  payments Payment[]
}

enum PaymentMethod {
  YAPE
  PLIN
  BCP
  BBVA
  SCOTIABANK
  INTERBANK
  EFECTIVO
  OTRO
}

model PaymentConcept {
  id       Int       @id @default(autoincrement())
  name     String
  total    Decimal[] @default([])
  payments Payment[]
}

model Payment {
  id               Int            @id @default(autoincrement())
  alumnoId         Int
  alumno           Alumno         @relation(fields: [alumnoId], references: [id])
  paymentConceptId Int
  paymentConcept   PaymentConcept @relation(fields: [paymentConceptId], references: [id])
  yearId           Int            @default(1)
  year             Year           @relation(fields: [yearId], references: [id])
  paymentMethod    PaymentMethod  @default(YAPE)
  datePayment      DateTime       @default(now())
  codePayment      String         @unique
  comment          String?
  total            Decimal

  // Modificamos la restricción única para incluir el campo yearId
  @@unique([alumnoId, paymentConceptId, yearId]) // Esta línea asegura que cada alumno sólo puede tener un pago por concepto de pago por año
}

model Year {
  id        Int       @id @default(autoincrement())
  year      Int       @unique
  isDefault Boolean   @default(false)
  Payment   Payment[]
}
